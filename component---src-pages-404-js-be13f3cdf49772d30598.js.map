{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/search.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Search","_this","_Component","call","this","getOrCreateIndex","index","Index","load","searchIndex","search","evt","target","value","setState","results","map","ref","documentStore","getDoc","state","console","log","react_default","style","position","type","placeholder","onChange","backgroundColor","marginLeft","page","key","id","gatsby_browser_entry","to","path","title","tags","join","Component","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","display","justifyContent","color","textDecoration","search_Search","siteSearchIndex","_1346230460","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_2924840780","node"],"mappings":"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","file":"component---src-pages-404-js-be13f3cdf49772d30598.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\nimport { Index } from 'elasticlunr'\n\nimport { Link } from 'gatsby'\n\n// Search component\nexport default class Search extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: ``,\n            results: [],\n        }\n    }\n\n    render() {\n        console.log(this.state.results)\n        return (\n            <div\n            >\n                <input\n                    style={{\n                        position:'relative',\n                        \n                    }}\n                    type=\"text\"\n                    placeholder=\"Type title words or tags\"\n                    value={this.state.query}\n                    onChange={this.search}\n                />\n                <ul\n                    style={{\n                        position: 'absolute',\n                        backgroundColor: 'white',\n                        marginLeft: '0',\n                    }}\n                >\n                    {this.state.results.map(page => (\n                        <li key={page.id}>\n                            <Link to={'/' + page.path}>\n                                {page.title}\n                            </Link>\n                            {': ' + page.tags.join(`,`)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n\n    getOrCreateIndex = () =>\n        this.index\n            ? this.index\n            : // Create an elastic lunr index and hydrate with graphql query results\n              Index.load(this.props.searchIndex)\n\n    search = evt => {\n        const query = evt.target.value\n        this.index = this.getOrCreateIndex()\n        this.setState({\n            query,\n            // Query the index with search string to get an [] of IDs\n            results: this.index\n                .search(query)\n                // Map over each ID and return the full document\n                .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n        })\n    }\n}\n","import React from 'react'\nimport { StaticQuery, Link } from 'gatsby'\nimport { graphql } from 'gatsby'\n\nimport Search from './search'\n\nconst Header = ({ siteTitle }) => (\n    <StaticQuery\n        query={graphql`\n            query SearchIndexQuery {\n                siteSearchIndex {\n                    index\n                }\n            }\n        `}\n        render={data => (\n            <header\n                style={{\n                    background: 'rebeccapurple',\n                    marginBottom: '1.45rem',\n                }}\n            >\n                <div\n                    style={{\n                        margin: '0 auto',\n                        maxWidth: 960,\n                        padding: '1.45rem 1.0875rem',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                    }}\n                >\n                    <h1 style={{ margin: 0 }}>\n                        <Link\n                            to=\"/\"\n                            style={{\n                                color: 'white',\n                                textDecoration: 'none',\n                            }}\n                        >\n                            {siteTitle}\n                        </Link>\n                    </h1>\n                    <Search searchIndex={data.siteSearchIndex.index} />\n                </div>\n            </header>\n        )}\n    />\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Helmet\n                    title={data.site.siteMetadata.title}\n                    meta={[\n                        { name: 'description', content: 'Sample' },\n                        { name: 'keywords', content: 'sample, something' },\n                    ]}\n                >\n                    <html lang=\"en\" />\n                </Helmet>\n            <Header siteTitle={data.site.siteMetadata.title}/>\n                <div\n                    style={{\n                        margin: '0 auto',\n                        maxWidth: 960,\n                        padding: '0px 1.0875rem 1.45rem',\n                        paddingTop: 0,\n                    }}\n                >\n                    {children}\n                </div>\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}