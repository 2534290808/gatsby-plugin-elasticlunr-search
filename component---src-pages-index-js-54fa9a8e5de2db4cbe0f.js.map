{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/search.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Index","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","filter","post","node","frontmatter","title","length","map","_ref2","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","path","excerpt","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Search","_this","_Component","call","this","getOrCreateIndex","index","load","searchIndex","search","evt","target","value","setState","results","ref","documentStore","getDoc","state","console","log","react_default","style","position","type","placeholder","onChange","backgroundColor","marginLeft","page","gatsby_browser_entry","tags","join","Component","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","display","justifyContent","color","textDecoration","search_Search","siteSearchIndex","_1346230460","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_2924840780"],"mappings":"iOAKe,SAASA,EAATC,GAAyB,IACvBC,EADuBD,EAARE,KACAC,kBAAtBC,MACR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGP,EACEQ,OAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYC,MAAMC,OAAS,IACpDC,IAAI,SAAAC,GAAoB,IAAXN,EAAWM,EAAjBL,KACN,OACEN,EAAAC,EAAAC,cAAA,OAAKU,IAAKP,EAAKQ,IACbb,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACY,EAAA,KAAD,CAAMC,GAAIV,EAAKE,YAAYS,MAAOX,EAAKE,YAAYC,QAErDR,EAAAC,EAAAC,cAAA,SAAIG,EAAKY,aAQhB,IAAMC,EAAS,+CCzBtBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAA/B,IAAAkB,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAAjC,IAAA,IAAAkC,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBY,IAAMC,cAAc,IAEzCZ,EAAc,SAAAa,GAAK,OACvBX,EAAA1B,EAAAC,cAACsB,EAAmBe,SAApB,KACG,SAAAC,GACC,OACEF,EAAMzC,MACL2C,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAO5C,MAEtDyC,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMzC,KAAOyC,EAAMzC,KAAKA,KAAO2C,EAAgBF,EAAMG,OAAO5C,MAGvD8B,EAAA1B,EAAAC,cAAA,uCAaf,SAASqB,IACP,MAAM,IAAIqB,MACR,gVATJnB,EAAYoB,UAAY,CACtBhD,KAAMiD,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qNCMzCK,EAAmB,SAAA7D,GAAkB,IAAf8D,EAAe9D,EAAf8D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOzB,IAAMlC,cAAc4D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BY,SAAUX,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO,49ECfMW,cACjB,SAAAA,EAAY7B,GAAO,IAAA8B,EAAA,OACfA,EAAAC,EAAAC,KAAAC,KAAMjC,IAANiC,MA0CJC,iBAAmB,kBACfJ,EAAKK,MACCL,EAAKK,MAEL/E,QAAMgF,KAAKN,EAAK9B,MAAMqC,cA/CbP,EAiDnBQ,OAAS,SAAAC,GACL,IAAMpC,EAAQoC,EAAIC,OAAOC,MACzBX,EAAKK,MAAQL,EAAKI,mBAClBJ,EAAKY,SAAS,CACVvC,QAEAwC,QAASb,EAAKK,MACTG,OAAOnC,GAEP/B,IAAI,SAAAf,GAAA,IAAGuF,EAAHvF,EAAGuF,IAAH,OAAad,EAAKK,MAAMU,cAAcC,OAAOF,QAxD1Dd,EAAKiB,MAAQ,CACT5C,MAAK,GACLwC,QAAS,IAJEb,8BAQnB1B,kBAEI,OADA4C,QAAQC,IAAIhB,KAAKc,MAAMJ,SAEnBO,EAAAvF,EAAAC,cAAA,WAEIsF,EAAAvF,EAAAC,cAAA,SACIuF,MAAO,CACHC,SAAS,YAGbC,KAAK,OACLC,YAAY,2BACZb,MAAOR,KAAKc,MAAM5C,MAClBoD,SAAUtB,KAAKK,SAEnBY,EAAAvF,EAAAC,cAAA,MACIuF,MAAO,CACHC,SAAU,WACVI,gBAAiB,QACjBC,WAAY,MAGfxB,KAAKc,MAAMJ,QAAQvE,IAAI,SAAAsF,GAAI,OACxBR,EAAAvF,EAAAC,cAAA,MAAIU,IAAKoF,EAAKnF,IACV2E,EAAAvF,EAAAC,cAAC+F,EAAA,KAAD,CAAMlF,GAAI,IAAMiF,EAAKhF,MAChBgF,EAAKxF,OAET,KAAOwF,EAAKE,KAAKC,KAAV,cApCAC,aC0CrBC,EA3CA,SAAA1G,GAAA,IAAG2G,EAAH3G,EAAG2G,UAAH,OACXd,EAAAvF,EAAAC,cAAC+F,EAAA,YAAD,CACIxD,MAAK,aAOLC,OAAQ,SAAA7C,GAAI,OACR2F,EAAAvF,EAAAC,cAAA,UACIuF,MAAO,CACHc,WAAY,gBACZC,aAAc,YAGlBhB,EAAAvF,EAAAC,cAAA,OACIuF,MAAO,CACHgB,OAAQ,SACRC,SAAU,IACVC,QAAS,oBACTC,QAAS,OACTC,eAAgB,kBAGpBrB,EAAAvF,EAAAC,cAAA,MAAIuF,MAAO,CAAEgB,OAAQ,IACjBjB,EAAAvF,EAAAC,cAAC+F,EAAA,KAAD,CACIlF,GAAG,IACH0E,MAAO,CACHqB,MAAO,QACPC,eAAgB,SAGnBT,IAGTd,EAAAvF,EAAAC,cAAC8G,EAAD,CAAQrC,YAAa9E,EAAKoH,gBAAgBxC,WAnC1D5E,KAAAqH,KCEEC,UAAS,SAAAxH,GAAA,IAAGgD,EAAHhD,EAAGgD,SAAH,OACX6C,EAAAvF,EAAAC,cAAC+F,EAAA,YAAD,CACIxD,MAAK,aASLC,OAAQ,SAAA7C,GAAI,OACR2F,EAAAvF,EAAAC,cAAAsF,EAAAvF,EAAAmH,SAAA,KACI5B,EAAAvF,EAAAC,cAACmH,EAAApH,EAAD,CACIO,MAAOX,EAAKyH,KAAKC,aAAa/G,MAC9BgH,KAAM,CACF,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,uBAGjClC,EAAAvF,EAAAC,cAAA,QAAMyH,KAAK,QAEnBnC,EAAAvF,EAAAC,cAAC0H,EAAD,CAAQtB,UAAWzG,EAAKyH,KAAKC,aAAa/G,QACtCgF,EAAAvF,EAAAC,cAAA,OACIuF,MAAO,CACHgB,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTkB,WAAY,IAGflF,KA9BjB9C,KAAAiI,MAqCJX,EAAOtE,UAAY,CACjBF,SAAUG,IAAUxC,KAAK2C,YAGZkE","file":"component---src-pages-index-js-54fa9a8e5de2db4cbe0f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nexport default function Index({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Layout>\n      {posts\n        .filter(post => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => {\n          return (\n            <div key={post.id}>\n              <h1>\n                <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n              </h1>\n              <p>{post.excerpt}</p>\n            </div>\n          )\n        })}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___path] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\nimport { Index } from 'elasticlunr'\n\nimport { Link } from 'gatsby'\n\n// Search component\nexport default class Search extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: ``,\n            results: [],\n        }\n    }\n\n    render() {\n        console.log(this.state.results)\n        return (\n            <div\n            >\n                <input\n                    style={{\n                        position:'relative',\n                        \n                    }}\n                    type=\"text\"\n                    placeholder=\"Type title words or tags\"\n                    value={this.state.query}\n                    onChange={this.search}\n                />\n                <ul\n                    style={{\n                        position: 'absolute',\n                        backgroundColor: 'white',\n                        marginLeft: '0',\n                    }}\n                >\n                    {this.state.results.map(page => (\n                        <li key={page.id}>\n                            <Link to={'/' + page.path}>\n                                {page.title}\n                            </Link>\n                            {': ' + page.tags.join(`,`)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n\n    getOrCreateIndex = () =>\n        this.index\n            ? this.index\n            : // Create an elastic lunr index and hydrate with graphql query results\n              Index.load(this.props.searchIndex)\n\n    search = evt => {\n        const query = evt.target.value\n        this.index = this.getOrCreateIndex()\n        this.setState({\n            query,\n            // Query the index with search string to get an [] of IDs\n            results: this.index\n                .search(query)\n                // Map over each ID and return the full document\n                .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n        })\n    }\n}\n","import React from 'react'\nimport { StaticQuery, Link } from 'gatsby'\nimport { graphql } from 'gatsby'\n\nimport Search from './search'\n\nconst Header = ({ siteTitle }) => (\n    <StaticQuery\n        query={graphql`\n            query SearchIndexQuery {\n                siteSearchIndex {\n                    index\n                }\n            }\n        `}\n        render={data => (\n            <header\n                style={{\n                    background: 'rebeccapurple',\n                    marginBottom: '1.45rem',\n                }}\n            >\n                <div\n                    style={{\n                        margin: '0 auto',\n                        maxWidth: 960,\n                        padding: '1.45rem 1.0875rem',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                    }}\n                >\n                    <h1 style={{ margin: 0 }}>\n                        <Link\n                            to=\"/\"\n                            style={{\n                                color: 'white',\n                                textDecoration: 'none',\n                            }}\n                        >\n                            {siteTitle}\n                        </Link>\n                    </h1>\n                    <Search searchIndex={data.siteSearchIndex.index} />\n                </div>\n            </header>\n        )}\n    />\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Helmet\n                    title={data.site.siteMetadata.title}\n                    meta={[\n                        { name: 'description', content: 'Sample' },\n                        { name: 'keywords', content: 'sample, something' },\n                    ]}\n                >\n                    <html lang=\"en\" />\n                </Helmet>\n            <Header siteTitle={data.site.siteMetadata.title}/>\n                <div\n                    style={{\n                        margin: '0 auto',\n                        maxWidth: 960,\n                        padding: '0px 1.0875rem 1.45rem',\n                        paddingTop: 0,\n                    }}\n                >\n                    {children}\n                </div>\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}