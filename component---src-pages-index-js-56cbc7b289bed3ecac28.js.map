{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/search.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Index","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","filter","post","node","frontmatter","title","length","map","_ref2","key","id","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","path","excerpt","propTypes","PropTypes","object","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Search","_this","_Component","call","this","getOrCreateIndex","index","load","searchIndex","search","evt","target","value","setState","results","expand","ref","documentStore","getDoc","state","react_default","style","position","type","placeholder","onChange","backgroundColor","marginLeft","page","gatsby_browser_entry","tags","join","Component","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","display","justifyContent","color","textDecoration","search_Search","siteSearchIndex","_299765166","Layout","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_755544856"],"mappings":"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","file":"component---src-pages-index-js-56cbc7b289bed3ecac28.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nexport default function Index({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n  return (\n    <Layout>\n      {posts\n        .filter(post => post.node.frontmatter.title.length > 0)\n        .map(({ node: post }) => (\n          <div key={post.id}>\n            <h1>\n              <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n            </h1>\n            <p>{post.excerpt}</p>\n          </div>\n        ))}\n    </Layout>\n  )\n}\n\nIndex.propTypes = {\n  data: PropTypes.object,\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___path] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Index } from \"elasticlunr\"\n\nimport { Link } from \"gatsby\"\n\n// Search component\nexport default class Search extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      query: ``,\n      results: [],\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          style={{\n            position: `relative`,\n          }}\n          type=\"text\"\n          placeholder=\"Type title words or tags\"\n          value={this.state.query}\n          onChange={this.search}\n        />\n        <ul\n          style={{\n            position: `absolute`,\n            backgroundColor: `white`,\n            marginLeft: `0`,\n          }}\n        >\n          {this.state.results.map(page => (\n            <li key={page.id}>\n              <Link to={`/` + page.path}>{page.title}</Link>\n              {`: ` + page.tags.join(`,`)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  getOrCreateIndex = () =>\n    this.index\n      ? this.index\n      : // Create an elastic lunr index and hydrate with graphql query results\n        Index.load(this.props.searchIndex)\n\n  search = evt => {\n    const query = evt.target.value\n    this.index = this.getOrCreateIndex()\n    this.setState({\n      query,\n      // Query the index with search string to get an [] of IDs\n      results: this.index\n        .search(query, { expand: true })\n        // Map over each ID and return the full document\n        .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n    })\n  }\n}\n\nSearch.propTypes = {\n  searchIndex: PropTypes.object,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { StaticQuery, Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\nimport Search from \"./search\"\n\nconst Header = ({ siteTitle }) => (\n  <StaticQuery\n    query={graphql`\n      query SearchIndexQuery {\n        siteSearchIndex {\n          index\n        }\n      }\n    `}\n    render={data => (\n      <header\n        style={{\n          background: `rebeccapurple`,\n          marginBottom: `1.45rem`,\n        }}\n      >\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `1.45rem 1.0875rem`,\n            display: `flex`,\n            justifyContent: `space-between`,\n          }}\n        >\n          <h1 style={{ margin: 0 }}>\n            <Link\n              to=\"/\"\n              style={{\n                color: `white`,\n                textDecoration: `none`,\n              }}\n            >\n              {siteTitle}\n            </Link>\n          </h1>\n          <Search searchIndex={data.siteSearchIndex.index} />\n        </div>\n      </header>\n    )}\n  />\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: `description`, content: `Sample` },\n            { name: `keywords`, content: `sample, something` },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}