{"version":3,"sources":["webpack:///./src/templates/md.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/search.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_ref","post","data","markdownRemark","a","createElement","title","frontmatter","dangerouslySetInnerHTML","__html","html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Search","_this","_Component","call","this","getOrCreateIndex","index","Index","load","searchIndex","search","evt","target","value","setState","results","map","ref","documentStore","getDoc","state","react_default","style","position","marginLeft","marginRight","padding","type","placeholder","onChange","width","page","tags","join","Component","Header","siteTitle","gatsby_browser_entry","background","marginBottom","margin","maxWidth","display","justifyContent","to","color","textDecoration","search_Search","siteSearchIndex","_1346230460","Layout","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","paddingTop","_2924840780","node"],"mappings":"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","file":"component---src-templates-md-js-6755ced44490b599f34f.js","sourcesContent":["import React from \"react\"\nimport Helmet from \"react-helmet\"\n\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nexport default function Template({ data }) {\n  const { markdownRemark: post } = data\n  return (\n    <Layout>\n      <Helmet title={`Your Blog Name - ${post.frontmatter.title}`} />\n      <div >\n        <h1>{post.frontmatter.title}</h1>\n        <div\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, { Component } from 'react'\nimport { Index } from 'elasticlunr'\n\n// Search component\nexport default class Search extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            query: ``,\n            results: [],\n        }\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    position:'relative',\n                    marginLeft: 'auto',\n                    marginRight: '0',\n                    padding: '1.45rem 1.0875rem',\n                }}\n            >\n                <input\n                    type=\"text\"\n                    placeholder=\"Type title words or tags\"\n                    value={this.state.query}\n                    onChange={this.search}\n                />\n                <ul\n                    style={{\n                        position: 'absolute',\n                        width: '100%',\n                    }}\n                >\n                    {this.state.results.map(page => (\n                        <li>\n                            {page.title}: {page.tags.join(`,`)}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n\n    getOrCreateIndex = () =>\n        this.index\n            ? this.index\n            : // Create an elastic lunr index and hydrate with graphql query results\n              Index.load(this.props.searchIndex)\n\n    search = evt => {\n        const query = evt.target.value\n        this.index = this.getOrCreateIndex()\n        this.setState({\n            query,\n            // Query the index with search string to get an [] of IDs\n            results: this.index\n                .search(query)\n                // Map over each ID and return the full document\n                .map(({ ref }) => this.index.documentStore.getDoc(ref)),\n        })\n    }\n}\n","import React from 'react'\nimport { StaticQuery, Link } from 'gatsby'\n\nimport Search from './search'\n\nconst Header = ({ siteTitle }) => (\n    <StaticQuery\n        query={graphql`\n            query SearchIndexQuery {\n                siteSearchIndex {\n                    index\n                }\n            }\n        `}\n        render={data => (\n            <header\n                style={{\n                    background: 'rebeccapurple',\n                    marginBottom: '1.45rem',\n                }}\n            >\n                <div\n                    style={{\n                        margin: '0 auto',\n                        maxWidth: 960,\n                        padding: '1.45rem 1.0875rem',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                    }}\n                >\n                    <h1 style={{ margin: 0 }}>\n                        <Link\n                            to=\"/\"\n                            style={{\n                                color: 'white',\n                                textDecoration: 'none',\n                            }}\n                        >\n                            {siteTitle}\n                        </Link>\n                    </h1>\n                    <Search searchIndex={data.siteSearchIndex.index} />\n                </div>\n            </header>\n        )}\n    />\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Helmet\n                    title={data.site.siteMetadata.title}\n                    meta={[\n                        { name: 'description', content: 'Sample' },\n                        { name: 'keywords', content: 'sample, something' },\n                    ]}\n                >\n                    <html lang=\"en\" />\n                </Helmet>\n            <Header siteTitle={data.site.siteMetadata.title}/>\n                <div\n                    style={{\n                        margin: '0 auto',\n                        maxWidth: 960,\n                        padding: '0px 1.0875rem 1.45rem',\n                        paddingTop: 0,\n                    }}\n                >\n                    {children}\n                </div>\n            </>\n        )}\n    />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}